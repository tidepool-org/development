secret:
  # -- whether to generate a secret
  enabled: false
  data_:
    ServiceAuth: ""
    AppleDeviceCheckKey: ""
  twiist:
      # -- whether to create dexcom secret
    enabled: false
    data_:
      # -- plaintext Twiist Oauth2 client secret
      clientSecret: ""
      # -- plaintext Twiist Oauth2 state salt
      stateSalt: ""
configmap:
  # -- whether to generate a configmap
  enabled: false
  data_:
    # -- used for checking generating jwts, which are required for checking the validity of apple device tokens during the insulet authorization flow.
    AppleDeviceCheckKeyIssuer: "75U4X84TEG"
    AppleDeviceCheckKeyId: "B542R658GF"
    AppleDeviceCheckUseDevelopment: "true"
  ## -- values for the twist config map
  twiist:
    # -- whether to generate a configmap
    enabled: true
    data_:
      # -- plaintext Twiist Oauth2 client id
      clientId: ""
      # -- Twiist Oauth2 authorize endpoint url
      authorizeURL: "https://"
      # -- Twiist Oauth2 token endpoint url
      tokenURL: "https://"
      # -- Twiist client redirect url
      redirectURL: ""
deployment:
  # -- secrets used to pull images
  imagePullSecrets:
  # -- auth Docker image
  image: tidepool/platform-auth:master-latest
  # -- number of replicas to deploy
  replicas: 1
initContainers: []

# -- memory and cpu resources for pods
resources: {}
# -- security context for each pod in deployment
podSecurityContext: {}
# -- annotations for each pod in deployment
podAnnotations: {}
securityContext: {}
hpa:
  # -- whether to create a horizontal pod autoscalers for all pods of given deployment
  enabled: false
  # -- minimum number of replicas that HPA will maintain
  minReplicas: 1
  # -- maximum number of replicas that HPA will maintain
  maxReplicas: null
pdb:
  # -- whether to apply a pod disruption budget
  enabled: false
  minAvailable: "50%"
mongo:
  # -- name of the secret containing the credentials of the mongo database to use
  secretName: mongo
kafka:
  # -- name of the configmap containing the kafka broker and credentials to use
  configmapName: kafka
  # -- name of the configmap containing the kafka broker and credentials to use
  secretName: kafka
# -- node selector configuration
nodeSelector: {}
# -- tolerations
tolerations: []
# -- affinity
affinity: {}
