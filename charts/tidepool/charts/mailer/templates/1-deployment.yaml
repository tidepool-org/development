---
{{- define "charts.mailer.s3.url" -}} {{include "charts.s3.url" .}}/{{ .Values.deployment.env.store.s3.bucket }}  {{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mailer
{{ include "charts.labels.standard" .}}
  name: mailer
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,{{ .Values.kafka.secretName }}"
    configmap.reloader.stakater.com/reload: "{{ .Values.kafka.configmapName }}"
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: mailer
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        app: mailer
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      {{ if .Values.initContainers }}
      initContainers:
{{- with .Values.initContainers }}
{{toYaml . | indent 6}}{{- end }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
{{ if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- end }}
      containers:
      - env:
        {{ include "charts.tracing.common" .}}
        {{ include "charts.kafka.common" .}}
        - name: TIDEPOOL_ASSET_URL
          value: {{ include "charts.mailer.s3.url" . | quote }}
        - name: TIDEPOOL_WEBAPP_URL
          value: {{ include "charts.host.app" . | quote }}
        - name: TIDEPOOL_SES_REGION
          value: {{.Values.global.region | quote }}
        - name: TIDEPOOL_EMAIL_SENDER_NAME
          value: "{{.Values.deployment.env.fromName}}"
        - name: TIDEPOOL_EMAIL_SENDER_ADDRESS
          value: "{{.Values.deployment.env.fromAddress}}"
        - name: KAFKA_CONSUMER_GROUP
          value: {{ printf "%s-%s" .Release.Namespace "mailer" | quote }}
        - name: TIDEPOOL_MAILER_BACKEND
          value: {{ .Values.deployment.env.backend }}
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.global.ports.mailer }}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: mailer
        ports:
        - containerPort: {{ .Values.global.ports.mailer }}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
