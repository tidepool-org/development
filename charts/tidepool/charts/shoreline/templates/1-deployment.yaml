---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shoreline
{{ include "charts.labels.standard" .}}
  name: shoreline
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,{{ .Values.mongo.secretName }},shoreline,userdata"
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: shoreline
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        app: shoreline
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      {{ if .Values.initContainers }}
      initContainers:
{{- with .Values.initContainers }}
{{toYaml . | indent 6}}{{- end }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        - name: API_HOST
          value: {{ .Values.global.gateway.default.apiHost | default .Values.global.gateway.default.host }}
        - name: CLOUD_EVENTS_SOURCE
          value: "shoreline"
        - name: TIDEPOOL_STORE_DATABASE
          value: user
        - name: KAFKA_CONSUMER_GROUP
          value: "shoreline"
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: Brokers
              optional: true
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: UserEventsTopic
              optional: true
        - name: KAFKA_DEAD_LETTERS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: UserEventsShorelineDeadLettersTopic
              optional: true
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: TopicPrefix
              optional: true
        - name: KAFKA_REQUIRE_SSL
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: RequireSSL
              optional: true
        - name: KAFKA_VERSION
          valueFrom:
            configMapKeyRef:
              name: kafka
              key: Version
              optional: true
        - name: MARKETO_CLINIC_ROLE
          valueFrom:
            configMapKeyRef:
              name: marketo
              key: ClinicRole
              optional: true
        - name: MARKETO_PATIENT_ROLE
          valueFrom:
            configMapKeyRef:
              name: marketo
              key: PatientRole
              optional: true
        - name: MARKETO_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: marketo
              key: Timeout
              optional: true
        - name: PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: token-signing-key
              key: private
              optional: true
        - name: PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: token-signing-key
              key: public
              optional: true
        - name: MARKETO_ID
          valueFrom:
            secretKeyRef:
              name: marketo
              key: ID
              optional: true
        - name: MARKETO_SECRET
          valueFrom:
            secretKeyRef:
              name: marketo
              key: Secret
              optional: true
        - name: MARKETO_URL
          valueFrom:
            secretKeyRef:
              name: marketo
              key: URL
              optional: true
        - name: DEMO_CLINIC_USER_ID
          valueFrom:
            configMapKeyRef:
              name: shoreline
              key: ClinicDemoUserId
              optional: true
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: ServiceAuth
              optional: true
        - name: SALT
          valueFrom:
            secretKeyRef:
              name: userdata
              key: UserPasswordSalt
              optional: true
        - name: VERIFICATION_SECRET
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: UserMailVerification
              optional: true
        - name: LONG_TERM_KEY
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: UserLongTermKey 
              optional: true
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:{{.Values.global.ports.gatekeeper}}"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:{{.Values.global.ports.highwater}}"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": ""
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "host": "localhost:{{.Values.global.ports.shoreline}}",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "longTermDaysDuration": 30,
                    "tokenDurationSecs": 2592000
                }
            }
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /status
            port: {{ .Values.global.ports.shoreline }}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: {{ .Values.global.ports.shoreline }}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
