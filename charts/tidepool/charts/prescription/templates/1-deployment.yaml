---
{{- define "charts.assets.s3.url" -}} {{include "charts.s3.url" .}}/{{ .Values.deployment.env.store.s3.bucket }} {{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prescription
{{ include "charts.labels.standard" .}}
  name: prescription
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,{{ .Values.mongo.secretName }},prescription,{{ .Values.kafka.secretName}}"
    configmap.reloader.stakater.com/reload: "{{ .Values.kafka.configmapName }}"
spec:
  selector:
    matchLabels:
      app: prescription
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas | default 0 }}
  strategy: {}
  template:
    metadata:
      labels:
        app: prescription
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      initContainers:
      {{ include "charts.init.shoreline" .}}
      containers:
      - env:
        {{ include "charts.platform.env.mongo" .}}
        {{ include "charts.platform.env.misc" .}}
        {{ include "charts.platform.env.clients" .}}
        {{ include "charts.kafka.common" .}}
        {{ include "charts.kafka.cloudevents.client" (dict "Values" .Values "Release" .Release "client" "prescription") }}
        - name: TIDEPOOL_PRESCRIPTION_SERVICE_DOMAIN
          value: {{ .Values.global.gateway.default.domain }}
        - name: TIDEPOOL_PRESCRIPTION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: prescription
              key: ServiceAuth
        - name: TIDEPOOL_PRESCRIPTION_SERVICE_SERVER_ADDRESS
          value: :{{.Values.global.ports.prescription}}
        image: "{{ .Values.deployment.image }}"
        {{ template "charts.platform.probes" .Values.global.ports.prescription}}
        name: prescription
        ports:
        - containerPort: {{.Values.global.ports.prescription}}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
