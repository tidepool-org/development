---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gatekeeper
{{ include "charts.labels.standard" .}}
  name: gatekeeper
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,{{ .Values.mongo.secretName }}"
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: gatekeeper
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        app: gatekeeper
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      {{ if .Values.initContainers }}
      initContainers:
{{- with .Values.initContainers }}
{{toYaml . | indent 6}}{{- end }}
      {{- end }}
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        {{ include "charts.kafka.common" .}}
        {{ include "charts.kafka.cloudevents.client" (dict "Values" .Values "Release" .Release "client" "gatekeeper") }}
        - name: TIDEPOOL_STORE_DATABASE
          value: gatekeeper
        - name: NODE_ENV
          value: '{{.Values.nodeEnvironment}}'
        - name: PORT
          value: "{{.Values.global.ports.gatekeeper}}"
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: SERVICE_NAME
          value: gatekeeper
        - name: USERSERVICE
          value: "shoreline:{{.Values.global.ports.shoreline}}"
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        livenessProbe:
           httpGet:
             path: /status
             port: {{.Values.global.ports.gatekeeper}}
           initialDelaySeconds: 3
           periodSeconds: 10
        name: gatekeeper
        ports:
        - containerPort: {{.Values.global.ports.gatekeeper}}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
