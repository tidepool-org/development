---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user
{{ include "charts.labels.standard" .}}
  name: user
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,{{ .Values.mongo.secretName }},user,userdata"
    configmap.reloader.stakater.com/reload: "{{ .Values.kafka.configmapName }}"
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: user
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        app: user
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      initContainers:
      {{ include "charts.init.shoreline" .}}
      {{ if .Values.initContainers }}
{{- with .Values.initContainers }}
{{toYaml . | indent 6}}{{- end }}
      {{- end }}
      containers:
      - env:
        {{ include "charts.platform.env.mongo" .}}
        {{ include "charts.platform.env.misc" .}}
        {{ include "charts.platform.env.clients" .}}
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: CLOUD_EVENTS_SOURCE
          value: "user"
        - name: KAFKA_CONSUMER_GROUP
          value: "user"
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: Brokers
              optional: true
        - name: KAFKA_TOPIC
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: UserEventsTopic
              optional: true
        - name: KAFKA_DEAD_LETTERS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: UserEventsUserDeadLettersTopic
              optional: true
        - name: KAFKA_TOPIC_PREFIX
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: TopicPrefix
              optional: true
        - name: KAFKA_REQUIRE_SSL
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: RequireSSL
              optional: true
        - name: KAFKA_USERNAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: Username
              optional: true
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.kafka.secretName }}
              key: Password
              optional: true
        - name: KAFKA_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.kafka.configmapName }}
              key: Version
              optional: true
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: user
              key: ServiceAuth
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :{{.Values.global.ports.user}}
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: userdata
              key: UserPasswordSalt 
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: userdata
              key: GroupIdEncryptionKey
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        {{ template "charts.platform.probes" .Values.global.ports.user }}
        name: user
        ports:
        - containerPort: {{.Values.global.ports.user}}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
