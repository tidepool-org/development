{{ if .Values.global.glooingress.enabled }}
apiVersion: gateway.solo.io/v1
kind: RouteTable
metadata:
  name: data
  namespace: "{{ .Release.Namespace }}"
  labels:
    namespace: "{{ .Release.Namespace }}"
    app: tidepool
spec:
  routes:
  - matchers:
    - methods:
      - GET
      regex: "/v1/users/[^/]+/data_sources"
    routeAction:
      single:
        upstream:
          name: data
{{- if .Values.shadowing.enabled }}
    options:
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - GET
      regex: "/v1/users/[^/]+/data_sources"
    routeAction:
      single:
        upstream:
          name: data
{{- if .Values.shadowing.enabled }}
    options:
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - POST
      - DELETE
      regex: "/(dataservices/)?v1/users/[^/]+/data_sources"
    routeAction:
      single:
        upstream:
          name: data
    options:
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers:
    - methods:
      - GET
      regex: "/v1/users/[^/]+/data_sets"
    routeAction:
      single:
        upstream: 
          name: data
    options:
      timeout: "60s"
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - POST
      regex: "/(dataservices/)?v1/users/[^/]+/data_sets"
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "60s"
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers:
    - methods:
      - GET
      regex: "/v1/users/[^/]+/datasets"
    routeAction:
      single:
        upstream:
          name: data
{{- if .Values.shadowing.enabled }}
    options:
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - POST
      regex: "/(dataservices/)?v1/users/[^/]+/datasets"
    routeAction:
      single:
        upstream:
          name: data
    options:
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers:
    - methods:
      - GET
      regex: "/v1/data_sources/[^/]+"
    routeAction:
      single:
        upstream:
          name: data
{{- if .Values.shadowing.enabled }}
    options:
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - PUT
      - DELETE
      regex: "/(dataservices/)?v1/data_sources/[^/]+"
    routeAction:
      single:
        upstream:
          name: data
    options:
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers:
    - methods:
      - DELETE
      regex: "/(dataservices/)?v1/users/[^/]+/data"
    routeAction:
      single:
        upstream:
          name: data
    options:
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - GET
      prefix: /v1/data_sets
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "60s"
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers: # matcher for upload modifications
    - methods:
      - DELETE
      - PUT
      regex: "/(dataservices/)?v1/data_sets/[^/]+"
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "60s"
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers: # matcher for the modifications of the data (not the "contents" of an upload) belonging to a specific upload
    - methods:
      - DELETE
      - POST
      regex: "/(dataservices/)?v1/data_sets/[^/]+/data"
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "300s"
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - PUT
      - DELETE
      regex: "/(dataservices/)?v1/datasets/[^/]+"
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "60s"
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
  - matchers:
    - methods:
      - POST
      regex: "/(dataservices/)?v1/datasets/[^/]+/data"
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "300s"
      regexRewrite:
        pattern:
          regex: 'dataservices/'
        substitution: ''
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - GET
      prefix: /v1/time
    routeAction:
      single:
        upstream:
          name: data
    options:
      extauth:
        disable: true
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - GET
      prefix: /dataservices/v1/time
    routeAction:
      single:
        upstream:
          name: data
    options:
      extauth:
        disable: true
      prefixRewrite: /v1/time
  - matchers:
    - methods:
      - GET
      prefix: /dataservices/
    routeAction:
      single:
        upstream:
          name: data
    options:
      prefixRewrite: /
      timeout: "60s"
{{- if .Values.shadowing.enabled }}
      {{- include "charts.routing.opts.shadowing" . | nindent 6 }}
{{- end }}
  - matchers:
    - methods:
      - POST
      exact: '/v1/summaries/cgm'
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "300s"
  - matchers:
      - methods:
          - POST
        exact: '/v1/summaries/bgm'
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "300s"
  - matchers:
    - methods:
      - GET
      - POST
      # not sure if these may also have a /dataservices prefix
      prefix: /v1/summaries
    routeAction:
      single:
        upstream:
          name: data
    options:
      timeout: "60s"
  - matchers:
    - methods:
      - DELETE
      - GET
      - POST
      prefix: /v1/alerts
    routeAction:
      single:
        upstream:
          name: data
{{- end }}
