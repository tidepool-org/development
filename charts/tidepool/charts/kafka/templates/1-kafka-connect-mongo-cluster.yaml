{{ if .Values.global.kafka.connect.enabled }}
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  annotations:
    strimzi.io/use-connector-resources: "true"
  labels:
    app: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}
  name: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}
  namespace: {{ .Release.Namespace }}
spec:
  authentication:
    passwordSecret:
      password: {{ .Values.global.kafka.passwordKeyName | default "Password" }}
      secretName: {{ .Values.kafka.secretName }}
    type: scram-sha-512
    username: {{ .Values.configmap.Username }}
  bootstrapServers: {{ .Values.configmap.Brokers }}
  config:
    config.providers: directory
    config.providers.directory.class: org.apache.kafka.common.config.provider.DirectoryConfigProvider
    config.storage.replication.factor: {{ .Values.global.kafka.connect.replicas | int }}
    config.storage.topic: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}-cluster-configs
    group.id: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}
    key.converter.schemas.enable: "false"
    offset.storage.replication.factor: {{ .Values.global.kafka.connect.replicas | int }}
    offset.storage.topic: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}-cluster-offsets
    status.storage.replication.factor: {{ .Values.global.kafka.connect.replicas | int }}
    status.storage.topic: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}-cluster-status
    value.converter.schemas.enable: "false"
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}-jmx
        key: metrics-config.yml
  externalConfiguration:
    volumes:
      - name: connector-config
        secret:
          secretName: {{ .Values.mongo.secretName }}
{{ if .Values.global.kafka.connect.keycloak.enabled }}
      - name: keycloak-config
        secret:
          secretName: {{ .Values.keycloak.secretName }}
{{- end }}
  image: tidepool/connect-debezium:0.26.0-kafka-2.8.0-mongo-1.6.1-pg-1.9.5
  replicas: {{ .Values.global.kafka.connect.replicas | int }}
{{ if .Values.global.kafka.connect.tlsEnabled }}
  tls:
    trustedCertificates: []
{{- end }}
{{- end }}
