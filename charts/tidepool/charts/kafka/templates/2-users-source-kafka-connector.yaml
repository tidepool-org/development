{{ if and .Values.global.kafka.connect.enabled .Values.global.kafka.connect.keycloak.enabled}}
{{- $realm := .Values.keycloak.realm -}}
{{ if not .Values.keycloak.realm }}
  {{- $realm = .Release.Namespace -}}
{{ end}}
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  labels:
    app: users-source
    strimzi.io/cluster: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}
  name: users-source
  namespace: {{ .Release.Namespace }}
spec:
  class: io.debezium.connector.postgresql.PostgresConnector
  config:
    tasks.max: 1
    plugin.name: 'wal2json'
    database.hostname: '${directory:/opt/kafka/external-configuration/keycloak-config:Hostname}'
    database.port: '${directory:/opt/kafka/external-configuration/keycloak-config:Port}'
    database.user: '${directory:/opt/kafka/external-configuration/keycloak-config:User}'
    database.password: '${directory:/opt/kafka/external-configuration/keycloak-config:Password}'
    database.dbname: '${directory:/opt/kafka/external-configuration/keycloak-config:Database}'
    database.server.name: {{ .Release.Namespace }}.keycloak
    key.converter: 'org.apache.kafka.connect.json.JsonConverter'
    key.converter.schemas.enable: false
    value.converter: 'org.apache.kafka.connect.json.JsonConverter'
    value.converter.schemas.enable: false
    snapshot.mode: {{ .Values.keycloak.snapshotMode }}
    table.include.list: 'public.user_entity,public.user_role_mapping'
    transforms: 'filter'
    transforms.filter.type: 'io.debezium.transforms.Filter'
    transforms.filter.language: 'jsr223.groovy'
    transforms.filter.topic.regex: '.+\.public.user_entity'
    transforms.filter.condition: "value.op && (((value.op == 'r' || value.op == 'c' || value.op == 'u') && (value.after && value.after.realm_id && value.after.realm_id == '{{ $realm }}')) || (value.op == 'd'))"
  tasksMax: 1
{{- end }}
