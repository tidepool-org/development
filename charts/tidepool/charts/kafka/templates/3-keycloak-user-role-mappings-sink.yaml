{{ if and .Values.global.kafka.connect.enabled .Values.global.kafka.connect.keycloak.enabled}}
{{- $realm := .Values.keycloak.realm -}}
{{ if not .Values.keycloak.realm }}
  {{- $realm = .Release.Namespace -}}
{{ end}}
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  labels:
    app: keycloak-user-role-mappings-sink
    strimzi.io/cluster: {{ .Release.Namespace }}-{{ .Values.global.kafka.connect.clusterName }}
  name: keycloak-user-role-mappings-sink
  namespace: {{ .Release.Namespace }}
spec:
  class: com.mongodb.kafka.connect.MongoSinkConnector
  config:
    change.data.capture.handler: com.mongodb.kafka.connect.sink.cdc.debezium.rdbms.postgres.PostgresHandler
    collection: keycloak_user_role_mappings
    connection.uri: {{ .Values.global.kafka.connect.mongoConnectionUri }}
    database: keycloak
    key.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: false
    topics: {{ $realm }}.keycloak.public.user_role_mapping
    value.converter: org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable: false
  tasksMax: {{ .Values.global.kafka.connect.sinkTasksMax | int }}
{{- end }}