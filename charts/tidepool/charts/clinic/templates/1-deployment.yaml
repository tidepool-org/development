---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: clinic
{{ include "charts.labels.standard" .}}
  name: clinic
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "clinic,server,{{ .Values.kafka.secretName }}"
    configmap.reloader.stakater.com/reload: "clinic,{{ .Values.kafka.configmapName }}"
{{ if .Values.deployment.annotations }}
    {{- .Values.deployment.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: clinic
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {}
  template:
    metadata:
      labels:
        app: clinic
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      {{ if .Values.initContainers }}
      initContainers:
{{- with .Values.initContainers }}
{{toYaml . | indent 6}}{{- end }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
      - env:
        {{ include "charts.platform.env.mongo" .}}
        {{ include "charts.platform.env.clients" .}}
        {{ include "charts.tracing.common" .}}
        - name: TIDEPOOL_AUTH_SERVICE_TOKEN_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: clinic
              key: KeycloakTokenEndpoint
              optional: true
        - name: CLINIC_DEMO_PATIENT_USER_ID
          valueFrom:
            configMapKeyRef:
              name: shoreline
              key: ClinicDemoUserId
              optional: true
        - name: TIDEPOOL_SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: TIDEPOOL_SHORELINE_CLIENT_ADDRESS
          value: "http://shoreline:{{.Values.global.ports.shoreline}}"
        - name: TIDEPOOL_SEAGULL_CLIENT_ADDRESS
          value: "http://seagull:{{.Values.global.ports.seagull}}"
        - name: TIDEPOOL_GATEKEEPER_CLIENT_ADDRESS
          value: "http://gatekeeper:{{.Values.global.ports.gatekeeper}}"
        - name: TIDEPOOL_REDOX_VERIFICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: clinic
              key: RedoxVerificationToken
              optional: true
        - name: TIDEPOOL_XEALTH_ENABLED
          valueFrom:
            configMapKeyRef:
              name: clinic
              key: XealthEnabled
              optional: true
        - name: TIDEPOOL_XEALTH_BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: clinic
              key: XealthBearerToken
              optional: true
        - name: TIDEPOOL_XEALTH_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: clinic
              key: XealthClientId
              optional: true
        - name: TIDEPOOL_XEALTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: clinic
              key: XealthClientSecret
              optional: true
        - name: TIDEPOOL_XEALTH_TOKEN_URL
          valueFrom:
            configMapKeyRef:
              name: clinic
              key: XealthTokenUrl
              optional: true
        - name: TIDEPOOL_XEALTH_SERVER_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: clinic
              key: XealthServerBaseUrl
              optional: true
        - name: TIDEPOOL_APPLICATION_URL
          value: {{ include "charts.host.gateway" . | quote }}
        image: "{{ .Values.deployment.image }}"
        securityContext:
          {{- .Values.podSecurityContext | toYaml | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.global.ports.clinic }}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: clinic
        ports:
        - containerPort: {{ .Values.global.ports.clinic }}
          name: "http"
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
