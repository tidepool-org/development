{
  "id" : "dev",
  "realm" : "dev",
  "displayName" : "Tidepool",
  "displayNameHtml" : "Tidepool",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 720,
  "accessTokenLifespanForImplicitFlow" : 1800,
  "ssoSessionIdleTimeout" : 28800,
  "ssoSessionMaxLifespan" : 86400,
  "ssoSessionIdleTimeoutRememberMe" : 604800,
  "ssoSessionMaxLifespanRememberMe" : 2592000,
  "offlineSessionIdleTimeout" : 3888000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 1800,
  "accessCodeLifespanLogin" : 7200,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 3600,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : true,
  "registrationEmailAsUsername" : true,
  "rememberMe" : true,
  "verifyEmail" : true,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : true,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "7bd58fa5-789a-41f4-a9f9-55e2108d8324",
      "name" : "clinician",
      "description" : "Tidepool Clinician",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "db46b760-a9df-46ba-83a6-1d30ef3e6044",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "3b9de271-2f1f-4977-bd68-388e6a155477",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "6208ae19-e139-4602-95a2-a22179398c20",
      "name" : "demo",
      "description" : "Demo User",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "01f18283-3d7e-47b4-b08c-60585e06f4a6",
      "name" : "test",
      "description" : "Test User",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "ab3b28de-eaa0-410c-8aeb-62399896e8a9",
      "name" : "default-roles-dev",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "4a98ab64-24cf-4220-b15d-3146cc851dbc",
      "name" : "brokered",
      "description" : "Brokered User",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "ae937aeb-e6d8-4364-b049-91af25fd5d3d",
      "name" : "care_partner",
      "description" : "Care Partner Account",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "db8ff21f-09b0-4a26-9322-668bc4fdbafb",
      "name" : "backend_service",
      "description" : "Tidepool Backend Service",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "c5c8282c-cb03-43af-8b32-28dcaaae4e4a",
      "name" : "migrated_clinic",
      "description" : "Migrated Tidepool Clinic",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "021c2c5e-0f6d-4173-abaf-e59d45e9f985",
      "name" : "patient",
      "description" : "Patient Account",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "1046d40a-52be-4b64-ba98-e98e1edb2ab6",
      "name" : "clinic",
      "description" : "Tidepool Clinic (Legacy)",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    }, {
      "id" : "7b58b6ca-c3fa-4afb-868b-dc08b52d86e0",
      "name" : "custodial_account",
      "description" : "Custodial Account",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "dev",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "15783ca3-555d-48d7-beee-44abd3eafcbe",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "508ecc17-2fb8-4593-9823-3ed51754bf35",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "impersonation", "create-client", "query-users", "view-authorization", "query-groups", "manage-identity-providers", "query-clients", "view-events", "manage-events", "view-identity-providers", "manage-users", "view-users", "view-clients", "manage-authorization", "view-realm", "manage-realm", "query-realms", "manage-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "acf36787-382f-4d03-864e-55912c371d59",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "aa965336-cc4e-4a5f-a782-e2ef8ed7056d",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "fa9435e2-1e38-4819-820f-200bdfed092a",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "c122e44d-3a73-4826-991a-cf920c11f286",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "07a399e4-856a-4e13-adf7-cbf67829cee3",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "729e56e3-0266-4a0e-bca7-405c175bc51f",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "8c83cfdd-024d-4b16-9f5a-3ab83e16a81b",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "5f0001d8-2be4-4cd3-90fd-42909e582e15",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "b3324010-25e8-4b7c-b543-ac981be64f90",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "cd6f8e42-bbc0-43b1-b093-79e985604527",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "0e1c3b75-490c-4ef0-ac26-21bc876c5905",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "d05b00b2-b6d8-494e-8cb9-b824118c5db8",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "37c7d532-b9b7-48d9-a0f9-e3eca9a9e158",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "85e7236e-e84c-4c42-ab39-3181d543266a",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "1be7ca3c-5418-4b9b-aa38-db64f30e233d",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "41e8c448-9bd7-4b67-8be2-694c0ece27f6",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      }, {
        "id" : "c606c0f4-cac2-4e3e-bb49-ebf1ddcc5e1b",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "tidepool-uploader" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "c426e60b-09d6-46cf-b067-2e9a0926aca0",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1ca9068c-7748-4172-b72a-3f0ce7fdb6ae",
        "attributes" : { }
      } ],
      "blip-smart-on-fhir" : [ ],
      "shoreline_lt" : [ ],
      "tidepool-loop" : [ ],
      "shoreline" : [ ],
      "admin-cli" : [ ],
      "backend" : [ ],
      "api-testing" : [ ],
      "tidepool-uploader-sso" : [ ],
      "account" : [ {
        "id" : "bd3dab0d-55f1-4504-bc97-cd172b824b2b",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "26bb786e-c29b-455b-a96a-0a92c28469db",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "8e06bf16-eecc-4f07-8c37-6219d38691b3",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "ed927b95-0fdd-4ec0-b463-13e78fa0debc",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "afe8a193-1ac3-4de6-94a5-44fd2768aba1",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "3ba19e7e-4edf-43bf-9ed0-8c50c97fc9f2",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "e7a85fb0-ae9d-4437-b5c6-0308162ec69c",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      }, {
        "id" : "908887d4-b8e5-46cc-adf0-fbbf9215b3c7",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
        "attributes" : { }
      } ],
      "trials-cli" : [ ],
      "blip" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "ab3b28de-eaa0-410c-8aeb-62399896e8a9",
    "name" : "default-roles-dev",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "dev"
  },
  "requiredCredentials" : [ "password" ],
  "passwordPolicy" : "hashAlgorithm(pbkdf2-sha256) and length(8) and maxLength(64)",
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "bb330bf2-af2a-4872-a516-74f82ec658e9",
    "username" : "service-account-backend",
    "emailVerified" : false,
    "createdTimestamp" : 1736970409269,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "backend",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ "tidepool_terms_required_action" ],
    "realmRoles" : [ "backend_service", "default-roles-dev" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "a47bf8db-9afc-4e0a-944a-c745baeca40c",
    "username" : "service-account-trials-cli",
    "emailVerified" : false,
    "createdTimestamp" : 1736970409224,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "trials-cli",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ "tidepool_terms_required_action" ],
    "realmRoles" : [ "backend_service", "default-roles-dev" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "client" : "backend",
    "roles" : [ "backend_service" ]
  }, {
    "client" : "blip",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "blip-smart-on-fhir",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "shoreline",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "shoreline_lt",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "tidepool-loop",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo" ]
  }, {
    "client" : "tidepool-uploader",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "tidepool-uploader-sso",
    "roles" : [ "clinician", "care_partner", "test", "patient", "custodial_account", "clinic", "demo", "brokered" ]
  }, {
    "client" : "trials-cli",
    "roles" : [ "backend_service" ]
  }, {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "d5e66149-64d5-44e0-a5dd-dbd143896cae",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1ac06209-dab4-4810-bc78-2b68afebb641",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "1bd75918-076f-4cbc-a796-460b3a767045",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1ea87a0e-221f-4db2-bdea-beb6fe7a15b7",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0916db5f-4cfb-4445-96ce-f73e82c4753c",
    "clientId" : "api-testing",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : false,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "VLKr7J7lz7LBpqqIkV9EdiW8KS6cSW4e",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "600",
      "client.secret.creation.time" : "1736970409",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.session.max.lifespan" : "14400",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "client.session.idle.timeout" : "3600",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "ed5fd85c-803d-4715-a976-58fef221c5e2",
    "clientId" : "backend",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "8f10ee82-f56f-44c3-854d-40ae4997f337",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "129600",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.session.max.lifespan" : "129600",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "client.session.idle.timeout" : "129600",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "a8b7ef0f-6538-4def-8617-677c2dc38ac6",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b324f7e0-e9ac-44e2-b510-54d1219ffb85",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7b1b5f16-79ef-4448-8292-b2d7f0780aef",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true",
        "userinfo.token.claim" : "false"
      }
    }, {
      "id" : "4e27781f-3b41-420e-8aee-ea97345e4a59",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "50e328ff-f275-4cbb-a904-7b1588a10e41",
    "clientId" : "blip",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://localhost:31500",
    "adminUrl" : "/",
    "baseUrl" : "http://localhost:31500",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:3000/*", "http://localhost:31500/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "180",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "backward-compat", "identity_provider", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "edc6e194-9d13-4834-9c71-5cc48fd86d04",
    "clientId" : "blip-smart-on-fhir",
    "name" : "",
    "description" : "",
    "rootUrl" : "http://localhost:31500",
    "adminUrl" : "/",
    "baseUrl" : "http://localhost:31500",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:3000/*", "http://localhost:31500/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "180",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "backward-compat", "identity_provider", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1ca9068c-7748-4172-b72a-3f0ce7fdb6ae",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0f6e3fb9-24ed-470a-8f86-259f9a3fa389",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7a5e5087-9c62-42e2-bd9e-f8195a59ae54",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/dev/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/dev/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "0b2dd9f0-e090-4293-90a6-54b6f617e1eb",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0859760f-7a4e-49ae-bb46-642d25d76367",
    "clientId" : "shoreline",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "d06e8001-94f5-4054-8086-69feb7f90e77",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "identity_provider", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "426b3f4d-2e72-47bd-8c76-f7b7b3ae8d05",
    "clientId" : "shoreline_lt",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "d06e8001-94f5-4054-8086-69feb7f90e77",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "2592000",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "client.session.max.lifespan" : "30672000",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "client.session.idle.timeout" : "2592000",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "identity_provider", "roles", "profile", "offline_access", "basic", "email" ],
    "optionalClientScopes" : [ ]
  }, {
    "id" : "8debc394-a4b1-460e-acbc-a68dcb72a24e",
    "clientId" : "tidepool-loop",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "org.tidepool.tidepoolkit.auth://redirect" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "e6a720f8-a2ac-4871-898f-12d104823d20",
    "clientId" : "tidepool-uploader",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:31500/*", "http://localhost:3001/*", "tidepooluploader://localhost/keycloak-redirect" ],
    "webOrigins" : [ "file://", "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : {
      "browser" : "58925d9e-9e57-4e54-a8aa-1a3d4eea365c"
    },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "backward-compat", "identity_provider", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "b39e01b1-a55c-4d2c-8a1a-01ade7a6d35b",
    "clientId" : "tidepool-uploader-sso",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:31500/*", "http://localhost:3001/*", "tidepooluploader://localhost/keycloak-redirect" ],
    "webOrigins" : [ "file://", "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "access.token.lifespan" : "180",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "post.logout.redirect.uris" : "+",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "backward-compat", "identity_provider", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0c4df572-2632-4369-8f36-82bb4fe8be10",
    "clientId" : "trials-cli",
    "name" : "",
    "description" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "2KSFQuO3FchdEcGV0Qoh90VyoZ2LpPfn",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "client.secret.creation.time" : "1736970409",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "display.on.consent.screen" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "f622d9e3-2d20-4649-b10e-3ac27edec9a4",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "false",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true",
        "userinfo.token.claim" : "false"
      }
    }, {
      "id" : "ff7ba1be-948a-4977-9bee-f54a5c670ca1",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "85beef3a-25a5-4b9c-b0b4-f487a5242001",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "db05d636-7ea6-4286-8574-5d4d530e4aa0",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "71855b88-8291-474e-b4c8-25faaae59b88",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f977ecf4-414a-46c8-b0c3-cf4750dd6d85",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "c1a22b92-b11f-4844-ae1e-7c7339e3952b",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "00817905-9b54-4223-a43e-5c0be43a5041",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "89b54990-7610-4adc-860d-aa36586670e2",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "8f800472-a895-4fdf-830c-915230b812ed",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "029f63f4-ee2c-4443-bcfa-402611d57534",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "d62124bc-6699-402d-96c8-a5f0984c7fd5",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "e1fd9ad8-1067-4a5c-aa91-fb9b331ea30c",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b85ae3b1-bd1d-4c45-a137-43f202178e8f",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e3232d91-379d-499f-9341-99765af43071",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "1c017712-7122-4d85-a8e9-74e601658aee",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "36dd4860-0287-4b70-9516-f764f234c514",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "33ca4dd4-b891-47b3-b455-24f421b295d1",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "e22aa262-dce4-4328-bb32-8780526335c2",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a862c0a-1b58-4f11-bce9-32fad8f6082e",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "c524673f-5610-4ee8-8074-b09eb60f146d",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b624f559-2505-4a54-be89-9bb2139192a8",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1b455be7-5aed-48b8-a9b1-6f7a84643844",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e96716ff-5110-481c-8e84-c5f0d6d05ccb",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "50007108-a1ef-4e23-b6b3-c5d70e9981e3",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "670190aa-a489-4f0d-b319-d3ed83b8153c",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "48d11700-efd5-4799-96d3-f14435f06cb0",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3a8774b1-3a4f-48ec-bf26-8a98a3ab731f",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2f858335-577c-47ee-b7dc-11f8ffb9cb96",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "da829ecd-94a9-4be2-ba52-0b297591b8d1",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "e1af48d3-6db0-4bf9-8f68-7f90dab5ec6d",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "79a8ad4e-48c0-4592-b23a-33c59824b85e",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "917fc90a-7bf8-4e42-a913-8ae438b1678c",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "7af00625-3f4d-4555-9e44-d2b470e13723",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "48f11f07-e78a-40c8-93ea-59ad19bd64d3",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "7dfb804d-8b82-40e3-aa2f-ae969a0e02ad",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "0bb8fd70-045e-4879-b7b3-cff809b5ceea",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "7d66e9e3-1a82-49c8-b278-419f5805c00e",
    "name" : "identity_provider",
    "description" : "This scope will return the identity provider that was for authenticating the current user session",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "df8f3220-428c-4a99-8cde-54ac3ed2dab1",
      "name" : "identity_provider",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "identity_provider",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "identity_provider",
        "access.tokenResponse.claim" : "true"
      }
    } ]
  }, {
    "id" : "b4338abc-f287-44d3-945e-eb81e58ce22e",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "da71a486-839c-4fd7-b4ab-f6ee58035098",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "4d2683fb-fe10-48d9-9c68-f7f47ca0c54f",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "aa1bea1c-9812-4ee7-9853-e7891d6fe8a2",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "2e247943-354a-4359-95b5-96e0629c63b1",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4f3f01f0-a0bb-4e27-9ef3-ae524697cab6",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "51046563-3551-4b23-9f1c-e6f29343f8da",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "5eaf09e5-01c9-4d47-a4f7-a68ca22bb9a1",
    "name" : "backward-compat",
    "description" : "Adds nonce and session_state for backward compatibility with Keycloak JS < 24.0.0",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false",
      "gui.order" : "",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "51508f2e-ed54-4684-be89-f51f5c01bbed",
      "name" : "nonce",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-nonce-backwards-compatible-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "86a706cd-5dfe-499b-a8fd-18539a5b5b78",
      "name" : "session_state",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-session-state-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "lightweight.claim" : "false",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : {
    "host" : "smtp",
    "from" : "noreply@tidepool.org",
    "fromDisplayName" : "Tidepool"
  },
  "loginTheme" : "tidepool",
  "emailTheme" : "tidepool",
  "eventsEnabled" : true,
  "eventsListeners" : [ "metrics-listener", "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : true,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "dce793f7-3c80-48e1-aa47-1f519fb25b30",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-usermodel-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "3137f7b6-c697-448a-bce7-8c51c3d5bc3e",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "64c598d3-d097-4984-a693-aaea758964ba",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f4d54ebe-2af7-46d5-8880-9536dbc263ea",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "fcf76b72-1c00-4da2-a783-ab7cb9e46d4f",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "f0dc4528-f0d1-4e00-be6a-709aa8461d82",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "e9db528e-636d-43da-bed4-38e5a52d77e5",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "548dd833-cd64-4da7-8496-6ae9a54ff2b6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.storage.UserStorageProvider" : [ {
      "id" : "cdadec87-ba35-42da-8a43-a24a1501a216",
      "name" : "Shoreline Migration",
      "providerId" : "User migration using a REST client",
      "subComponents" : { },
      "config" : {
        "API_TOKEN_ENABLED" : [ "true" ],
        "changedSyncPeriod" : [ "-1" ],
        "API_TOKEN" : [ "806a29b9-9ef0-47d4-8a0a-bdfdbb5f78d4" ],
        "fullSyncPeriod" : [ "-1" ],
        "cachePolicy" : [ "DEFAULT" ],
        "MIGRATE_UNMAPPED_ROLES" : [ "true" ],
        "priority" : [ "0" ],
        "URI" : [ "http://shoreline.default.svc.cluster.local:9107/migrate" ],
        "USE_USER_ID_FOR_CREDENTIAL_VERIFICATION" : [ "true" ],
        "enabled" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "a25707ff-cbdd-4f55-b2d0-a7beaeeed73c",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAlbSQ81v3Un8A02iRwJl58phvmdDVehYzZ5nxjpC9IT/eLhA2/b9tXQO62OwJSm2lqiaEpuB1IXO1aYsQ4o7bihWtN5ymDpLKDETbG9EEttuSL/PtsShFopV6yLLOngtUtFri3PgI+pJV6JsFdjK2NFlIyMMuV57d9A48aM2ngwl1PgvvIQfxcgC7L5IMUVxw8vXGK6sOiEcmUpxmYUZQTAzH83earf3gqqXByNEbggfW8ionvaKEMctOpVmmOrXRiKAV0Suj3dby/2fWvHuie0ZvvhnxoXLsbKgPH1TsUo7Vqq7n903nBxEMiDknSE3ttzNOm57FqpAQCkz+eaB0yQIDAQABAoIBAAT3mUmh1wpzMVVSZmekEAJHIYjSf4rN+sWou3WWAth8FISlwBVaSSgpbAUvi71e9vy2y3b4AprqCm5mkVhbEhi6UGWEepQINdEDZdu96zCgB3E04EGdCvZyjEDlgeqHiLd1PorDZhTeTyBpKFy8IQSKo9oZc8uvd0DWShXWIQU9eZkowyn6YrvvYOlKByzRRdwniqV2jcoL/Z5jlSVEBao13MCmUTsH04v8nZj+wXrPwMSdy3tU/d0Z8Y60qIvg8hk2zfsVNEryo43hXrmhCwbnzL3S/VaVPJv8I+3Fm/F9ne4s+cBXOrz4pGuKzWAidIEJAV0hxKsScRkY81NellsCgYEAyq0GSr7oc2Tw4CRSevPKT9L2FrkYnxjQfIECW38fEqh/gldo4y/xxjyWmmi+Em6fnXDcT/Y6H+ky4t8sBPdy5CqQ1KX5bPYDJgoWn+pBhKe1R3BU/kqSo5209K6HBNdUaGVBLHqVRJHG+XbKm+DmLD6FK8a2NxN2xHEekqNGnZsCgYEAvRfHRFj+RJ7p9xo0+fw3OOomUtqPsqV3wyT9DEFRGfCaDL7WhAESc5J6GZaKeUNLjGawqgbOu76j/5+JuPsJPjpXKd8uSQSPosAc7i7Y+Oy47qlGm+rpF2UzRns4AshVRzXmS256dv4pmCNb9ANMIdVFuRh4CEf49Xm9//Xpj2sCgYBkM5DlyWbBDkmsdyi0Eu2V83WpHE/Y8Hq640lYFQw2vEl2FmML1ztQR8opgtld4YVWYGL7wX9RIYj/81gfCHur5IOALqKXRTWfS+ONolJMFGIidJ4Arru62pCJW/Py58aaal0DcYN0yCG4Wgunb1Q80ZgjYXXa2uugCVEVLFYQOwKBgF6xMK2uby6H8hw3OH5TaogK4cQuBTXuHOpRdJMVhnqZ/VsSmjQioU3U9WYo+BE/vO6DYkbS/+YO0uuoxfwnYnqSFqI2TGRub0uOLy6rsSX+zaFejah4299GY4YRIHxsPCBcAoaVvagnIUc5tcuddxueRLsrYLis6iRrodUzHZIfAoGBAMU/4awUbDU9zvCH0KM3ry0E9W6O/Hj5t5vQKZX0q2J/Oax3qSVex8Ewv/5QttMlsVgpl0dBGT3mJyhn22wspVSzKl+X83sZX34eY3TYXrbPKHDPCGaOZ/BjQSGg9wfQPZ1kWY/pthhUxIDfzmY8Oh0cfwy+GIQtJl5qFLrWSNFe" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIIClTCCAX0CBgGUa4ES+TANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANkZXYwHhcNMjUwMTE1MTk0NTA4WhcNMzUwMTE1MTk0NjQ4WjAOMQwwCgYDVQQDDANkZXYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCVtJDzW/dSfwDTaJHAmXnymG+Z0NV6FjNnmfGOkL0hP94uEDb9v21dA7rY7AlKbaWqJoSm4HUhc7VpixDijtuKFa03nKYOksoMRNsb0QS225Iv8+2xKEWilXrIss6eC1S0WuLc+Aj6klXomwV2MrY0WUjIwy5Xnt30DjxozaeDCXU+C+8hB/FyALsvkgxRXHDy9cYrqw6IRyZSnGZhRlBMDMfzd5qt/eCqpcHI0RuCB9byKie9ooQxy06lWaY6tdGIoBXRK6Pd1vL/Z9a8e6J7Rm++GfGhcuxsqA8fVOxSjtWqruf3TecHEQyIOSdITe23M06bnsWqkBAKTP55oHTJAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHMj4k2MPGvjXnq6DMPn31ThAhDuiR70P1PDQUBC6MS0beYeXIOx03M+tB1ph0hAewYSaFS89JA+cLuuSzX/v4bq8QWP+Ou91WTSuFQZxQHDiqWJmIEfHdQQ0sXoQlA2DzfXCIE0wbRc0rH9+eMg2HZm2EfrOF38LC7cJPvNb01s5LklRx0V6+9is6t4nDpLV3jdPLQeyGxkxmJAsPqUyCStZV0APP6liO7MyutWpnx3INtDg1VBMFfUGvvXB8VSV9oxRUoB9CwTk4IZdmyJH3l5FcXhqnVf91CX17uiHftLsECCDtiNxTg2GPS1OnAiI/OkVghFymuO8mvSAZU5iiw=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "468c7374-4c98-4ad8-a17e-867f87740243",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "2d86dc36-3b07-4b79-b58a-29d45497e930" ],
        "secret" : [ "3ytUM-cn7VVG3SY5JohUCA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "76152ef7-9b9f-4b61-9e87-c24ab42fa180",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "334ca04d-dc5b-4cb8-ac70-60e0f7b23ac3" ],
        "secret" : [ "faDmS47T9epVBP8uX9oALpw4D9HGnfhBSjldLbu1nQl_saVyXGwrBbtMHWgOTa9wxJ-jcF7p-C5aDcw5fI_rDCwW4xgGRg_ueUs_3AkiEBFKDgO-uGyE_2egKalZjynQE72H-mbQmRIa-WqEAzqkRNmKBrUmgXV5oO_G5elOEjQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "99f8440a-7e6b-4033-9e46-152334e39df9",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAtO58J8qXeF/9NfjBWDPKm3YyFA4SXxGPrI0d9S3oav+SpoFiKwwllEezQlv7Kn67VgwwA/KC98QIiKvwfmTUGgpFGWTmnC2Gie+54Qitc34Oc9G8R6qp5iu0Fkr9OR3kcyio1vGjGS6UaQQWdME6gJcSnMXFHmmVV4q2k8FQNgvUutgUkTZejXU8XbS8lUD8agv4Ap5A7JK751UuFcY5CSQgpx+XlGLMyTzF5iJrEJBFTHX95n67oRLasm/eOc/RUVx1lvCLxp6STl+X5ZT9OcJPyMMBO2R4IzH6h+hY5RbLHa/CcKLwt0EjSJ9erhFsfIvKn8g2QwnrY1HOSaNULwIDAQABAoIBAERMXhubMzBic7AC9eE4s7uZk2/UnAS9GVIWdv+NU9XIIfCumIMNc8YUhst+80HoUwk5Uoq66ctjeaE13nOn1hT6WXkriI3d9ZJuJumWn/sf047O1lbrSnUzfCiKKCp+aTU7XPi+gEXKOoWl4GA0bMQLwx/g2/cN/izslN0TtRahH+5WwXczxP2ihQXvPHXM/vksKJPLvKnCTD4NPYDOs/xWTqzLmgUcEQ/URzzfiUxrlN3DdWR7Xdl7CLPmjIJhldDIVkmOiKe8Byq9gGWQGljx0ucuiR/LqXmLcCVkfhbEoTQbLbGNwcxKA+I9/0QMUdVzIpwuke623pFtAu9k6qkCgYEA489LfEkvM44g1biMTzalbexvw1Bv9KTQHxNu+4K2WBW92FuMaBZkmmdVP3xIzoGo+pSuQHdarZsSq82Qbsnfz6jlnhkcS692QuRc4mKQe0X+PVUs+jdsqXdwVVI8afVLowCA+V6P8g5ZmbbLLQMkIPFl2gz++GUGdNGC6DQiJAsCgYEAy1InN5mhUhPlc/ALQIVTRIAflknud2/UBJrDQcEpDsAxxr9DWjOUUF9DGr2ZWTayteY1YDLwP8Sc2br7OdMnS0KDib9ypUADyF1D5nUS2dZqx8z9D0Jrq+OYZrrgD89IcM0jAu3h6RAeHxiXsbQUMc90tVaEbRJwT6sSdRRLou0CgYBFAaoP/+s4ZrkzhC+cXyVFYvWH6HnBVZtljnFz5mhtzkgvnauua/oVe2+rR26Wf1g8b4VJKd5h8DN7r00tAiG1uae0eE7F7mSYZqxsNwclEFKvKXnyYY+c1f1FGyAJyLActC5dW3OnEwm5MlHhVK5A/F6p6n3hqFiIUl6hEAm3eQKBgQCnqkuk0g/yO24QOXdN8aRE7NMfgEAiRhm04lr6MmvFOkDSAI9uJvK7hJM1zfxTUYP19K03c0oji+M8ubDKcpIIwgTu5u2H0E5OQHrp5Mly0hqkQSq+Fqvrx3e534k+AFVgkAm7NKgDJcNxKTqO1E2C9ezsTThPKdFsIUrLOb1V0QKBgCyP5AlzZyAgyCA0ZdoQ57s1W1x2spnAysHt4v62nI022DCCwpgdnxgWZrf3mgzYWRv3QXDHOfV22dn/4Ll5lmvaqzhq2UnesJx01/kTEqINzR7tFfBErGzVZCjupMu7oHmeIPLUq4hpStIyIpFidBRIqy+G2HowpLYMuPkFLPk1" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIIClTCCAX0CBgGUa4ETNjANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANkZXYwHhcNMjUwMTE1MTk0NTA4WhcNMzUwMTE1MTk0NjQ4WjAOMQwwCgYDVQQDDANkZXYwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC07nwnypd4X/01+MFYM8qbdjIUDhJfEY+sjR31Lehq/5KmgWIrDCWUR7NCW/sqfrtWDDAD8oL3xAiIq/B+ZNQaCkUZZOacLYaJ77nhCK1zfg5z0bxHqqnmK7QWSv05HeRzKKjW8aMZLpRpBBZ0wTqAlxKcxcUeaZVXiraTwVA2C9S62BSRNl6NdTxdtLyVQPxqC/gCnkDskrvnVS4VxjkJJCCnH5eUYszJPMXmImsQkEVMdf3mfruhEtqyb945z9FRXHWW8IvGnpJOX5fllP05wk/IwwE7ZHgjMfqH6FjlFssdr8JwovC3QSNIn16uEWx8i8qfyDZDCetjUc5Jo1QvAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAEeUucym0PnYiUYpHEwUrLSQ55nYqnc5ptGiZI4WYk/EAnKYT4VL/sbJGwHe/VOpy2ue5OdZkDBMFDSX784xed3h34mKaCCCrf3Nqo8I88ZlX1IW52AgkWstQwGruEGO7+2fEBPyH6G3xmzMTufi0wL5JHzI2yyy+upFnZNclQNhc0iSb7FX2NBLr6c7hczsrokAx5mImqUehUzD7IX6yIu5oIBitRdMSPgX3a7Y4jzqBZx1Ty9fgQmef5XxUw9ch8vnlvgvXofXntftd4KDU46EL3JtYMR/mwE/f1oWW9Oarj2GrlmoLXSYLU/qfdvSosKJeJijIgfctlFxcWUPJj4=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "defaultLocale" : "",
  "authenticationFlows" : [ {
    "id" : "89b0cdfc-92c4-4121-b222-d3117df78dc4",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "15c07fee-ac23-44ab-adfd-e7429767889c",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "58925d9e-9e57-4e54-a8aa-1a3d4eea365c",
    "alias" : "Browser Flow for Non-Brokered Users",
    "description" : "Customized Browser flow that doesn't allow brokered users to sign in with password",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Password and OTP subflow for Non-Brokered users",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "289bbcd3-4339-4fcf-bad2-9af72aae882f",
    "alias" : "Browser Flow with IDP Discovery",
    "description" : "Customized Browser flow that redirects users to their IDP if their email matches the configured domains",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Home IdP Discovery UPN Config",
      "authenticator" : "home-idp-discovery",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Home IdP Discovery Config",
      "authenticator" : "home-idp-discovery",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "New User Registration",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Password and OTP subflow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "29ac0e79-ffae-403c-94b3-98b60b871095",
    "alias" : "Conditional OTP",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "29b033dc-005a-4569-a9d3-3f7f41a0b077",
    "alias" : "Conditional OTP - Non-Brokered User Flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "90f746e8-2157-4e9d-98f9-b526290842e2",
    "alias" : "Conditional Registration Redirect",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Check User Not In Context",
      "authenticator" : "condition-user-in-context",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "redirect-to-registration-page",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "dfbdaf9c-6201-426d-8ac6-9bbf0c21b48d",
    "alias" : "Conditional Reset OTP",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7c5944ec-71cc-4b85-b6cc-fa781a85e19a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "08dd0b6e-1520-425c-99e0-a408114eb7c1",
    "alias" : "Direct Grant - Conditional OTP flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "008367ce-813b-4d4c-8e38-ce926f802a47",
    "alias" : "Direct Grant - Disallow Brokered User Logins with Password Credentials",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Direct Grant Brokered User Role Config",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Direct Grant Deny Brokered User Access",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "17533198-9b5a-424d-be5b-a016137c6f71",
    "alias" : "Direct Grant Flow for Non-Brokered Users",
    "description" : "Direct grant flow which prevents brokered users to to sign in with password credentials",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Disallow Brokered User Logins with Password Credentials",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP flow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0316e6e4-ef09-4ceb-931c-b85b98b614a5",
    "alias" : "Disallow Brokered User Logins with Password Credentials",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Brokered User Role Config",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Deny Brokered User Access",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "da22dc88-83a0-4269-be87-2a196bac6816",
    "alias" : "Disallow Brokered User Logins with Password Credentials - Non-Brokered Flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Brokered User Role Config - Non-Brokered User Flow",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Deny Brokered User Access - Non-Brokered User Flow",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "00a9f03d-998f-4949-b9e0-dd36d5db8327",
    "alias" : "Disallow Brokered User Password Reset",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Brokered User Role Config - Reset Flow",
      "authenticator" : "conditional-user-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "Deny Brokered User Access Config",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "658d5359-51ff-4210-8bff-436f501229dd",
    "alias" : "Disallow Login if Email Matches Different Provider",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Non Matching Email Config",
      "authenticator" : "home-idp-discovery-matching-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorConfig" : "First Login Deny Access if Email Doesn't Match",
      "authenticator" : "deny-access-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "051d216d-a507-4387-8622-45e7480b5cb2",
    "alias" : "First Broker Login - SSO IDP",
    "description" : "Actions taken after first broker login with SSP identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Disallow Login if Email Matches Different Provider",
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "User Creation or Linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "33191355-e2cf-4037-bdf9-2627d3c9b089",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "982a16a4-6297-423c-b4fb-48127ea47d5e",
    "alias" : "Handle Duplicate Email Address",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ee819ce9-2c55-42a5-ba58-693b2e99bc1d",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f8a3826c-fc28-442a-84a9-f319518a3e9e",
    "alias" : "New User Registration",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Conditional Registration Redirect",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b0e1b7a0-cc1e-4d52-9afb-f97ce5256458",
    "alias" : "Password and OTP subflow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Disallow Brokered User Logins with Password Credentials - Non-Brokered Flow",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Disallow Brokered User Logins with Password Credentials",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4898d456-6ed8-4ab0-b717-c7f01b957d12",
    "alias" : "Password and OTP subflow for Non-Brokered users",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Conditional OTP - Non-Brokered User Flow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "98d94fcc-05cb-4c35-80f0-21c5ee678c03",
    "alias" : "Registration Flow with IDP Discovery",
    "description" : "Customized registration flow which redirects users to their IDP based on the supplied login hint",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "home-idp-discovery-login-hint",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "registration flow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "be2b7012-c364-4fea-a2cb-6a2f4a69c0c2",
    "alias" : "Registration Flow with IDP Discovery v2",
    "description" : "Customized registration flow which redirects users to their IDP based on the supplied login hint",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "Home IdP Discovery Login Hint Config",
      "authenticator" : "home-idp-discovery-login-hint",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Registration Role Subflow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f5c56c0e-dc6f-47d0-a7ab-18ff55c55aed",
    "alias" : "Registration Page Form Subflow",
    "description" : "",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-email-idp-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "tidepool-registration-role",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "tidepool-registration-terms",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "de1ce5df-5bd5-485e-9c70-715aeb99686b",
    "alias" : "Registration Role Subflow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "tidepool-registration-role-discovery",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Registration Page Form Subflow",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9263c122-ba40-4e4e-a8a7-0c29ed35ebe8",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "096f3b87-bae9-4b26-bf88-5a7df8f35563",
    "alias" : "Reset Credentials for Non-Brokered Users",
    "description" : "Customized reset credentials flow which doesn't allow brokered users to reset their password credentials",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Disallow Brokered User Password Reset",
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Conditional Reset OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1ba53be4-60d1-4838-946f-faa17622803c",
    "alias" : "User Creation or Linking",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Duplicate Email Address",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "06b1098a-245e-4600-81a4-b377b51059f7",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c1a71e41-c0d1-4770-ac21-8415fb3564a7",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f9bd9d78-7d0a-40b6-9097-909962b1723c",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1ab79894-fad3-481f-9681-0ed9d28afb0d",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4190bff8-e94f-4a6b-b91b-3336519017af",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2a34874f-6ca6-4f7c-ae4b-a9cfa267c86d",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "733fbaaf-5c1d-4532-b8eb-382da0d3e8a3",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4faa338a-e1f9-4138-935c-70615eef8b0c",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e44bff6c-c5d8-4e5c-b9ef-612753089259",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3fa357df-c6ec-4514-9db0-f347cdaa731d",
    "alias" : "registration flow",
    "description" : "",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : true,
      "flowAlias" : "registration page form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d6209e7e-96fd-46b5-82e1-c3515ab830ac",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d0f96dad-6520-4672-bb79-3029849beafb",
    "alias" : "registration page form",
    "description" : "",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : false,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-email-idp-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 0,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ed01298e-28d5-4a9b-bb17-d6de77d05e7d",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "efba4f66-199e-4cba-955a-5743109b901d",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "7567b83f-567e-42a5-a5eb-2579c1d3b922",
    "alias" : "Brokered User Role Config",
    "config" : {
      "condUserRole" : "brokered"
    }
  }, {
    "id" : "e7225549-6a79-4351-8812-d5016f61e464",
    "alias" : "Brokered User Role Config - Non-Brokered User Flow",
    "config" : {
      "condUserRole" : "brokered"
    }
  }, {
    "id" : "af2ebede-e8b2-4ccb-b371-47f77a72b784",
    "alias" : "Brokered User Role Config - Reset Flow",
    "config" : {
      "condUserRole" : "brokered"
    }
  }, {
    "id" : "af3177de-40b6-47db-beb8-b939813b626e",
    "alias" : "Check User Not In Context",
    "config" : {
      "negate" : "true"
    }
  }, {
    "id" : "d9bfcdad-c8d6-4ee3-85d9-3808f10975bb",
    "alias" : "Deny Brokered User Access",
    "config" : {
      "denyErrorMessage" : "Please use your identity provider to authenticate"
    }
  }, {
    "id" : "2bf56250-2f2a-47e2-80da-ffd1651630d5",
    "alias" : "Deny Brokered User Access - Non-Brokered User Flow",
    "config" : {
      "denyErrorMessage" : "Please use your identity provider to authenticate"
    }
  }, {
    "id" : "cee01803-c07a-4550-b075-7485719f79b6",
    "alias" : "Deny Brokered User Access Config",
    "config" : {
      "denyErrorMessage" : "Please contact your network administrator directly to reset your password."
    }
  }, {
    "id" : "0b503331-875f-4e60-8c43-f6a7212a5009",
    "alias" : "Direct Grant Brokered User Role Config",
    "config" : {
      "condUserRole" : "brokered"
    }
  }, {
    "id" : "3597ade4-5931-465b-a3a6-c8b225c296a1",
    "alias" : "Direct Grant Deny Brokered User Access",
    "config" : {
      "denyErrorMessage" : "Please use your identity provider to authenticate"
    }
  }, {
    "id" : "ef66155f-12f7-4b37-8d07-8fca01c8cf39",
    "alias" : "First Login Deny Access if Email Doesn't Match",
    "config" : {
      "denyErrorMessage" : "Invalid email address"
    }
  }, {
    "id" : "cae10301-a98f-4e60-96a5-8b9554074692",
    "alias" : "Home IdP Discovery Config",
    "config" : {
      "bypassLoginPage" : "true",
      "forwardToLinkedIdp" : "true",
      "userAttribute" : "email"
    }
  }, {
    "id" : "c1c75462-af9e-4410-84c1-dd4f53f9dceb",
    "alias" : "Home IdP Discovery Login Hint Config",
    "config" : {
      "bypassLoginPage" : "true",
      "forwardToLinkedIdp" : "true",
      "userAttribute" : "email"
    }
  }, {
    "id" : "864c6f9f-0456-4382-83f7-d9658fe4fa73",
    "alias" : "Home IdP Discovery UPN Config",
    "config" : {
      "forwardToLinkedIdp" : "false",
      "userAttribute" : "upn"
    }
  }, {
    "id" : "ec688add-85e7-4395-96bf-fe4bc890f297",
    "alias" : "Non Matching Email Config",
    "config" : {
      "bypassLoginPage" : "true",
      "forwardToLinkedIdp" : "true",
      "negate" : "true",
      "userAttribute" : "email"
    }
  }, {
    "id" : "9c27de16-841e-4021-81cc-826704a57a04",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "55b62380-a453-465b-9b44-9654da520ef1",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "user_role_prompt_required_action",
    "name" : "Tidepool: User Role Prompt",
    "providerId" : "user_role_prompt_required_action",
    "enabled" : true,
    "defaultAction" : true,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "tidepool_terms_required_action",
    "name" : "Tidepool: Terms and Conditions",
    "providerId" : "tidepool_terms_required_action",
    "enabled" : true,
    "defaultAction" : true,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "Browser Flow with IDP Discovery",
  "registrationFlow" : "Registration Flow with IDP Discovery v2",
  "directGrantFlow" : "Direct Grant Flow for Non-Brokered Users",
  "resetCredentialsFlow" : "Reset Credentials for Non-Brokered Users",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "frontendUrl" : "http://localhost:32000",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "25.0.6",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}